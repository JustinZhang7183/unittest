# the way of generate display name. four values: 1.Standard 2.Simple 3.ReplaceUnderscores 4.IndicativeSentences
junit.jupiter.displayname.generator.default = org.junit.jupiter.api.DisplayNameGenerator$Standard

# the order way of execute of test method
junit.jupiter.testmethod.order.default = org.junit.jupiter.api.MethodOrderer$OrderAnnotation

# the order way of execute of test class
junit.jupiter.testclass.order.default = org.junit.jupiter.api.ClassOrderer$OrderAnnotation

# the setting of test instance lifecycle
junit.jupiter.testinstance.lifecycle.default = per_class

# maximum length of displeyname argument, default is 512
junit.jupiter.params.displayname.argument.maxlength = 512

# declare default name pattern for all parameterized test
#junit.jupiter.params.displayname.default = {index}

# time out configurations, more specific configuration override less specific ones.
# the values of it must be : <number> [ns | us | ms | s | m | h | d]
# 1.junit.jupiter.execution.timeout.default : Default timeout for all testable and lifecycle methods
# 2.junit.jupiter.execution.timeout.testable.method.default : Default timeout for all testable methods
# 3.junit.jupiter.execution.timeout.test.method.default : Default timeout for @Test methods
# 4.junit.jupiter.execution.timeout.testtemplate.method.default : Default timeout for @TestTemplate methods
# 5.junit.jupiter.execution.timeout.testfactory.method.default : Default timeout for @TestFactory methods
# 6.junit.jupiter.execution.timeout.lifecycle.method.default : Default timeout for all lifecycle methods
# 7.junit.jupiter.execution.timeout.beforeall.method.default : Default timeout for @BeforeAll methods
# 8.junit.jupiter.execution.timeout.beforeeach.method.default : Default timeout for @BeforeEach methods
# 9.junit.jupiter.execution.timeout.aftereach.method.default : Default timeout for @AfterEach methods
# 10.junit.jupiter.execution.timeout.afterall.method.default : Default timeout for @AfterAll methods

# disable @Timeout Globally, three values: enabled, disabled and disabled_on_debug.
# A VM runtime is considered to run in debug mode when one of its input parameters starts with -agentlib:jdwp or -Xrunjdwp
# junit.jupiter.execution.timeout.mode = enabled

# parallel execution
# junit.jupiter.execution.parallel.enabled = true
# execution mode: concurrent or same_thread
# junit.jupiter.execution.parallel.mode.default = concurrent
# config execution mode for top-level classes, these two mode decide how method and class execution !!!
# junit.jupiter.execution.parallel.mode.classed.default = concurrent

# execution strategy for desired parallelism and maximum pool size: dynamic,fixed and custom
# junit.jupiter.execution.parallel.config.strategy = dynamic

# factor to be multiplied by the number of available cores to determine the value,default is 1
# junit.jupiter.execution.parallel.config.dynamic.factor = 1

# desired parallelism for the fixed configuration strategy
# junit.jupiter.execution.parallel.config.fixed.parallelism = 4

# fully qualified class name to be used for custom strategy
# junit.jupiter.execution.parallel.config.custom.class = xx.xxx.xxxStrategy

# default cleanup mode of TempDirectory extension: always, on_success, never
# junit.jupiter.tempdir.cleanup.mode.default = always